{
  "{\"sourceRoot\":\"/home/don/Desktop/honeyAPI-deploy/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/don/Desktop/honeyAPI-deploy\",\"filename\":\"/home/don/Desktop/honeyAPI-deploy/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/don/Desktop/honeyAPI-deploy\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/don/Desktop/honeyAPI-deploy/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/don/Desktop/honeyAPI-deploy",
      "filename": "/home/don/Desktop/honeyAPI-deploy/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/don/Desktop/honeyAPI-deploy",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/don/Desktop/honeyAPI-deploy/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/don/Desktop/honeyAPI-deploy/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/don/Desktop/honeyAPI-deploy/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar bodyParser = require('body-parser');\n\nvar mongoose = require('mongoose');\n\nvar express = require('express');\n\nvar Api = require('./api.model');\n\nvar cors = require('cors');\n\nvar app = express();\nvar apiRoutes = express.Router();\nvar PORT = 4000;\napp.use(bodyParser.json());\napp.use(cors());\nvar uri = \"mongodb+srv://admin:lollone@honeycluster.ffuvg.mongodb.net/test?retryWrites=true&w=majority\";\nmongoose.connect(uri, {\n  useNewUrlParser: true\n});\nvar connection = mongoose.connection;\napiRoutes.route('/').get(function (req, res) {\n  Api.find(function (err, apis) {\n    if (err) {\n      console.log(err);\n    } else {\n      res.json(apis);\n    }\n  });\n});\napiRoutes.route('/:id').get(function (req, res) {\n  var id = req.params.id;\n  Api.findById(id, function (err, api) {\n    res.json(api);\n  });\n});\napiRoutes.route('/update/:id').post(function (req, res) {\n  Api.findById(req.params.id, function (err, api) {\n    if (!api) res.status(404).send(\"data is not found\");else api.api_description = req.body.api_description;\n    api.api_proprietary = req.body.api_proprietary;\n    api.api_endpoint = req.body.api_endpoint;\n    api.save().then(function (todo) {\n      res.json('api updated!');\n    })[\"catch\"](function (err) {\n      res.status(400).send(\"Update not possible\");\n    });\n  });\n});\napiRoutes.route('/add').post(function (req, res) {\n  var api = new Api(req.body);\n  console.log(api);\n  api.save().then(function (api) {\n    res.status(200).json({\n      'api': 'api added successfully'\n    });\n  })[\"catch\"](function (err) {\n    res.status(400).send('adding new api failed');\n  });\n});\napp.use('/apis', apiRoutes);\napp.listen(PORT, function () {\n  console.log(\"Server is running on port: \" + PORT);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJib2R5UGFyc2VyIiwicmVxdWlyZSIsIm1vbmdvb3NlIiwiZXhwcmVzcyIsIkFwaSIsImNvcnMiLCJhcHAiLCJhcGlSb3V0ZXMiLCJSb3V0ZXIiLCJQT1JUIiwidXNlIiwianNvbiIsInVyaSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJjb25uZWN0aW9uIiwicm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJmaW5kIiwiZXJyIiwiYXBpcyIsImNvbnNvbGUiLCJsb2ciLCJpZCIsInBhcmFtcyIsImZpbmRCeUlkIiwiYXBpIiwicG9zdCIsInN0YXR1cyIsInNlbmQiLCJhcGlfZGVzY3JpcHRpb24iLCJib2R5IiwiYXBpX3Byb3ByaWV0YXJ5IiwiYXBpX2VuZHBvaW50Iiwic2F2ZSIsInRoZW4iLCJ0b2RvIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1HLEdBQUcsR0FBR0gsT0FBTyxDQUFDLGFBQUQsQ0FBbkI7O0FBQ0EsSUFBTUksSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSyxHQUFHLEdBQUdILE9BQU8sRUFBbkI7QUFFQSxJQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFsQjtBQUVBLElBQU1DLElBQUksR0FBRyxJQUFiO0FBR0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRVixVQUFVLENBQUNXLElBQVgsRUFBUjtBQUNBTCxHQUFHLENBQUNJLEdBQUosQ0FBUUwsSUFBSSxFQUFaO0FBRUEsSUFBTU8sR0FBRyxHQUFHLDZGQUFaO0FBRUFWLFFBQVEsQ0FBQ1csT0FBVCxDQUFpQkQsR0FBakIsRUFBc0I7QUFDcEJF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Q0FBVzlCLElBQVgsRUFBaUIsWUFBVztBQUN4QmMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0NBQWdDZixJQUE1QztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvZG9uL0Rlc2t0b3AvaG9uZXlBUEktZGVwbG95LyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJylcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IEFwaSA9IHJlcXVpcmUoJy4vYXBpLm1vZGVsJylcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJylcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuXG5jb25zdCBhcGlSb3V0ZXMgPSBleHByZXNzLlJvdXRlcigpXG5cbmNvbnN0IFBPUlQgPSA0MDAwXG5cblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSlcbmFwcC51c2UoY29ycygpKVxuXG5jb25zdCB1cmkgPSBcIm1vbmdvZGIrc3J2Oi8vYWRtaW46bG9sbG9uZUBob25leWNsdXN0ZXIuZmZ1dmcubW9uZ29kYi5uZXQvdGVzdD9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHlcIjtcblxubW9uZ29vc2UuY29ubmVjdCh1cmksIHtcbiAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlXG59KTtcbmNvbnN0IGNvbm5lY3Rpb24gPSBtb25nb29zZS5jb25uZWN0aW9uO1xuXG5hcGlSb3V0ZXMucm91dGUoJy8nKS5nZXQoZnVuY3Rpb24ocmVxLHJlcykgeyBcbiAgICBBcGkuZmluZCggKGVyciwgYXBpcykgPT4ge1xuICAgICAgICBpZihlcnIpIHsgXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgIH0gZWxzZSB7IFxuICAgICAgICAgICAgcmVzLmpzb24oYXBpcylcbiAgICAgICAgfVxuICAgIH0pXG59KVxuXG5hcGlSb3V0ZXMucm91dGUoJy86aWQnKS5nZXQoIGZ1bmN0aW9uKHJlcSwgcmVzKSB7IFxuICAgIGxldCAgaWQgPSByZXEucGFyYW1zLmlkXG4gICAgQXBpLmZpbmRCeUlkKGlkLCAoZXJyLCBhcGkpID0+IHsgXG4gICAgICAgIHJlcy5qc29uKGFwaSlcbiAgICB9KVxufSlcblxuYXBpUm91dGVzLnJvdXRlKCcvdXBkYXRlLzppZCcpLnBvc3QoZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICBBcGkuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCwgZnVuY3Rpb24oZXJyLCBhcGkpIHtcbiAgICAgICAgaWYgKCFhcGkpXG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZChcImRhdGEgaXMgbm90IGZvdW5kXCIpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICBhcGkuYXBpX2Rlc2NyaXB0aW9uID0gcmVxLmJvZHkuYXBpX2Rlc2NyaXB0aW9uO1xuICAgICAgICAgICAgYXBpLmFwaV9wcm9wcmlldGFyeSA9IHJlcS5ib2R5LmFwaV9wcm9wcmlldGFyeTtcbiAgICAgICAgICAgIGFwaS5hcGlfZW5kcG9pbnQgPSByZXEuYm9keS5hcGlfZW5kcG9pbnQ7XG5cbiAgICAgICAgICAgIGFwaS5zYXZlKCkudGhlbih0b2RvID0+IHtcbiAgICAgICAgICAgICAgICByZXMuanNvbignYXBpIHVwZGF0ZWQhJyk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoXCJVcGRhdGUgbm90IHBvc3NpYmxlXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcblxuYXBpUm91dGVzLnJvdXRlKCcvYWRkJykucG9zdChmdW5jdGlvbihyZXEsIHJlcykge1xuICAgIGxldCBhcGkgPSBuZXcgQXBpKHJlcS5ib2R5KTtcbiAgICBjb25zb2xlLmxvZyhhcGkpXG4gICAgYXBpLnNhdmUoKVxuICAgICAgICAudGhlbihhcGkgPT4ge1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oeydhcGknOiAnYXBpIGFkZGVkIHN1Y2Nlc3NmdWxseSd9KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwMCkuc2VuZCgnYWRkaW5nIG5ldyBhcGkgZmFpbGVkJyk7XG4gICAgICAgIH0pO1xufSk7XG5cbmFwcC51c2UoJy9hcGlzJywgYXBpUm91dGVzKVxuXG5hcHAubGlzdGVuKFBPUlQsIGZ1bmN0aW9uKCkgeyBcbiAgICBjb25zb2xlLmxvZyhcIlNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQ6IFwiICsgUE9SVClcbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "mongoose",
        "express",
        "Api",
        "cors",
        "app",
        "apiRoutes",
        "Router",
        "PORT",
        "use",
        "json",
        "uri",
        "connect",
        "useNewUrlParser",
        "connection",
        "route",
        "get",
        "req",
        "res",
        "find",
        "err",
        "apis",
        "console",
        "log",
        "id",
        "params",
        "findById",
        "api",
        "post",
        "status",
        "send",
        "api_description",
        "body",
        "api_proprietary",
        "api_endpoint",
        "save",
        "then",
        "todo",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/home/don/Desktop/honeyAPI-deploy/",
      "sourcesContent": [
        "const bodyParser = require('body-parser')\nconst mongoose = require('mongoose')\nconst express = require('express')\nconst Api = require('./api.model')\nconst cors = require('cors')\nconst app = express()\n\nconst apiRoutes = express.Router()\n\nconst PORT = 4000\n\n\napp.use(bodyParser.json())\napp.use(cors())\n\nconst uri = \"mongodb+srv://admin:lollone@honeycluster.ffuvg.mongodb.net/test?retryWrites=true&w=majority\";\n\nmongoose.connect(uri, {\n  useNewUrlParser: true\n});\nconst connection = mongoose.connection;\n\napiRoutes.route('/').get(function(req,res) { \n    Api.find( (err, apis) => {\n        if(err) { \n            console.log(err)\n        } else { \n            res.json(apis)\n        }\n    })\n})\n\napiRoutes.route('/:id').get( function(req, res) { \n    let  id = req.params.id\n    Api.findById(id, (err, api) => { \n        res.json(api)\n    })\n})\n\napiRoutes.route('/update/:id').post(function(req, res) {\n    Api.findById(req.params.id, function(err, api) {\n        if (!api)\n            res.status(404).send(\"data is not found\");\n        else\n            api.api_description = req.body.api_description;\n            api.api_proprietary = req.body.api_proprietary;\n            api.api_endpoint = req.body.api_endpoint;\n\n            api.save().then(todo => {\n                res.json('api updated!');\n            })\n            .catch(err => {\n                res.status(400).send(\"Update not possible\");\n            });\n    });\n});\n\napiRoutes.route('/add').post(function(req, res) {\n    let api = new Api(req.body);\n    console.log(api)\n    api.save()\n        .then(api => {\n            res.status(200).json({'api': 'api added successfully'});\n        })\n        .catch(err => {\n            res.status(400).send('adding new api failed');\n        });\n});\n\napp.use('/apis', apiRoutes)\n\napp.listen(PORT, function() { \n    console.log(\"Server is running on port: \" + PORT)\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594989027855
  },
  "{\"sourceRoot\":\"/home/don/Desktop/honeyAPI-deploy/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/don/Desktop/honeyAPI-deploy\",\"filename\":\"/home/don/Desktop/honeyAPI-deploy/api.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/don/Desktop/honeyAPI-deploy\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/don/Desktop/honeyAPI-deploy/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/don/Desktop/honeyAPI-deploy",
      "filename": "/home/don/Desktop/honeyAPI-deploy/api.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/don/Desktop/honeyAPI-deploy",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/don/Desktop/honeyAPI-deploy/api.model.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/don/Desktop/honeyAPI-deploy/api.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/don/Desktop/honeyAPI-deploy/",
        "sourceFileName": "api.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar Api = Schema({\n  api_endpoint: {\n    type: String\n  },\n  api_proprietary: {\n    type: String\n  },\n  api_description: {\n    type: String\n  }\n});\nmodule.exports = mongoose.model('Api', Api);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJBcGkiLCJhcGlfZW5kcG9pbnQiLCJ0eXBlIiwiU3RyaW5nIiwiYXBpX3Byb3ByaWV0YXJ5IiwiYXBpX2Rlc2NyaXB0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXhCO0FBRUEsSUFBSUMsR0FBRyxHQUFHRCxNQUFNLENBQUM7QUFDYkUsRUFBQUEsWUFBWSxFQUFFO0FBQ1ZDLElBQUFBLElBQUksRUFBRUM7QUFESSxHQUREO0FBSWJDLEVBQUFBLGVBQWUsRUFBRTtBQUNiRixJQUFBQSxJQUFJLEVBQUVDO0FBRE8sR0FKSjtBQU9iRSxFQUFBQSxlQUFlLEVBQUU7QUFDYkgsSUFBQUEsSUFBSSxFQUFFQztBQURPO0FBUEosQ0FBRCxDQUFoQjtBQVlBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLFFBQVEsQ0FBQ1csS0FBVCxDQUFlLEtBQWYsRUFBc0JSLEdBQXRCLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Rvbi9EZXNrdG9wL2hvbmV5QVBJLWRlcGxveS8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJylcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYVxuXG5sZXQgQXBpID0gU2NoZW1hKHtcbiAgICBhcGlfZW5kcG9pbnQ6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nXG4gICAgfSwgXG4gICAgYXBpX3Byb3ByaWV0YXJ5OiB7XG4gICAgICAgIHR5cGU6IFN0cmluZ1xuICAgIH0sXG4gICAgYXBpX2Rlc2NyaXB0aW9uOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZ1xuICAgIH1cbn0pXG5cbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ0FwaScsIEFwaSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "api.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "Api",
        "api_endpoint",
        "type",
        "String",
        "api_proprietary",
        "api_description",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,IAAIC,GAAG,GAAGD,MAAM,CAAC;AACbE,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAEC;AADI,GADD;AAIbC,EAAAA,eAAe,EAAE;AACbF,IAAAA,IAAI,EAAEC;AADO,GAJJ;AAObE,EAAAA,eAAe,EAAE;AACbH,IAAAA,IAAI,EAAEC;AADO;AAPJ,CAAD,CAAhB;AAYAG,MAAM,CAACC,OAAP,GAAiBV,QAAQ,CAACW,KAAT,CAAe,KAAf,EAAsBR,GAAtB,CAAjB",
      "sourceRoot": "/home/don/Desktop/honeyAPI-deploy/",
      "sourcesContent": [
        "const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet Api = Schema({\n    api_endpoint: {\n        type: String\n    }, \n    api_proprietary: {\n        type: String\n    },\n    api_description: {\n        type: String\n    }\n})\n\nmodule.exports = mongoose.model('Api', Api)"
      ]
    },
    "sourceType": "script",
    "mtime": 1594989027603
  },
  "{\"sourceRoot\":\"/home/don/Desktop/honeyAPI/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/don/Desktop/honeyAPI\",\"filename\":\"/home/don/Desktop/honeyAPI/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/don/Desktop/honeyAPI\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/don/Desktop/honeyAPI/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/don/Desktop/honeyAPI",
      "filename": "/home/don/Desktop/honeyAPI/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/don/Desktop/honeyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/don/Desktop/honeyAPI/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/don/Desktop/honeyAPI/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/don/Desktop/honeyAPI/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar bodyParser = require('body-parser');\n\nvar mongoose = require('mongoose');\n\nvar express = require('express');\n\nvar Api = require('./api.model');\n\nvar cors = require('cors');\n\nvar app = express();\nvar apiRoutes = express.Router();\nvar PORT = 4000;\napp.use(bodyParser.json());\napp.use(cors());\nvar uri = \"mongodb+srv://admin:lollone@honeycluster.ffuvg.mongodb.net/test?retryWrites=true&w=majority\";\nmongoose.connect(uri, {\n  useNewUrlParser: true\n});\nvar connection = mongoose.connection;\napiRoutes.route('/').get(function (req, res) {\n  Api.find(function (err, apis) {\n    if (err) {\n      console.log(err);\n    } else {\n      res.json(apis);\n    }\n  });\n});\napiRoutes.route('/:id').get(function (req, res) {\n  var id = req.params.id;\n  Api.findById(id, function (err, api) {\n    res.json(api);\n  });\n});\napiRoutes.route('/update/:id').post(function (req, res) {\n  Api.findById(req.params.id, function (err, api) {\n    if (!api) res.status(404).send(\"data is not found\");else api.api_description = req.body.api_description;\n    api.api_proprietary = req.body.api_proprietary;\n    api.api_endpoint = req.body.api_endpoint;\n    api.save().then(function (todo) {\n      res.json('api updated!');\n    })[\"catch\"](function (err) {\n      res.status(400).send(\"Update not possible\");\n    });\n  });\n});\napiRoutes.route('/add').post(function (req, res) {\n  var api = new Api(req.body);\n  console.log(api);\n  api.save().then(function (api) {\n    res.status(200).json({\n      'api': 'api added successfully'\n    });\n  })[\"catch\"](function (err) {\n    res.status(400).send('adding new api failed');\n  });\n});\napp.use('/apis', apiRoutes);\napp.listen(PORT, function () {\n  console.log(\"Server is running on port: \" + PORT);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJib2R5UGFyc2VyIiwicmVxdWlyZSIsIm1vbmdvb3NlIiwiZXhwcmVzcyIsIkFwaSIsImNvcnMiLCJhcHAiLCJhcGlSb3V0ZXMiLCJSb3V0ZXIiLCJQT1JUIiwidXNlIiwianNvbiIsInVyaSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJjb25uZWN0aW9uIiwicm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJmaW5kIiwiZXJyIiwiYXBpcyIsImNvbnNvbGUiLCJsb2ciLCJpZCIsInBhcmFtcyIsImZpbmRCeUlkIiwiYXBpIiwicG9zdCIsInN0YXR1cyIsInNlbmQiLCJhcGlfZGVzY3JpcHRpb24iLCJib2R5IiwiYXBpX3Byb3ByaWV0YXJ5IiwiYXBpX2VuZHBvaW50Iiwic2F2ZSIsInRoZW4iLCJ0b2RvIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1HLEdBQUcsR0FBR0gsT0FBTyxDQUFDLGFBQUQsQ0FBbkI7O0FBQ0EsSUFBTUksSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNSyxHQUFHLEdBQUdILE9BQU8sRUFBbkI7QUFFQSxJQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQ0ssTUFBUixFQUFsQjtBQUVBLElBQU1DLElBQUksR0FBRyxJQUFiO0FBR0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRVixVQUFVLENBQUNXLElBQVgsRUFBUjtBQUNBTCxHQUFHLENBQUNJLEdBQUosQ0FBUUwsSUFBSSxFQUFaO0FBRUEsSUFBTU8sR0FBRyxHQUFHLDZGQUFaO0FBRUFWLFFBQVEsQ0FBQ1csT0FBVCxDQUFpQkQsR0FBakIsRUFBc0I7QUFDcEJFLEVBQUFBLGVBQWUsRUFBRTtBQURHLENBQXRCO0FBR0EsSUFBTUMsVUFBVSxHQUFHYixRQUFRLENBQUNhLFVBQTVCO0FBRUFSLFNBQVMsQ0FBQ1MsS0FBVixDQUFnQixHQUFoQixFQUFxQkMsR0FBckIsQ0FBeUIsVUFBU0MsR0FBVCxFQUFhQyxHQUFiLEVBQWtCO0FBQ3ZDZixFQUFBQSxHQUFHLENBQUNnQixJQUFKLENBQVUsVUFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQWU7QUFDckIsUUFBR0QsR0FBSCxFQUFRO0FBQ0pFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxHQUFaO0FBQ0gsS0FGRCxNQUVPO0FBQ0hGLE1BQUFBLEdBQUcsQ0FBQ1IsSUFBSixDQUFTVyxJQUFUO0FBQ0g7QUFDSixHQU5EO0FBT0gsQ0FSRDtBQVVBZixTQUFTLENBQUNTLEtBQVYsQ0FBZ0IsTUFBaEIsRUFBd0JDLEdBQXhCLENBQTZCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUM1QyxNQUFLTSxFQUFFLEdBQUdQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXRCxFQUFyQjtBQUNBckIsRUFBQUEsR0FBRyxDQUFDdUIsUUFBSixDQUFhRixFQUFiLEVBQWlCLFVBQUNKLEdBQUQsRUFBTU8sR0FBTixFQUFjO0FBQzNCVCxJQUFBQSxHQUFHLENBQUNSLElBQUosQ0FBU2lCLEdBQVQ7QUFDSCxHQUZEO0FBR0gsQ0FMRDtBQU9BckIsU0FBUyxDQUFDUyxLQUFWLENBQWdCLGFBQWhCLEVBQStCYSxJQUEvQixDQUFvQyxVQUFTWCxHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDbkRmLEVBQUFBLEdBQUcsQ0FBQ3VCLFFBQUosQ0FBYVQsR0FBRyxDQUFDUSxNQUFKLENBQVdELEVBQXhCLEVBQTRCLFVBQVNKLEdBQVQsRUFBY08sR0FBZCxFQUFtQjtBQUMzQyxRQUFJLENBQUNBLEdBQUwsRUFDSVQsR0FBRyxDQUFDVyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsbUJBQXJCLEVBREosS0FHSUgsR0FBRyxDQUFDSSxlQUFKLEdBQXNCZCxHQUFHLENBQUNlLElBQUosQ0FBU0QsZUFBL0I7QUFDQUosSUFBQUEsR0FBRyxDQUFDTSxlQUFKLEdBQXNCaEIsR0FBRyxDQUFDZSxJQUFKLENBQVNDLGVBQS9CO0FBQ0FOLElBQUFBLEdBQUcsQ0FBQ08sWUFBSixHQUFtQmpCLEdBQUcsQ0FBQ2UsSUFBSixDQUFTRSxZQUE1QjtBQUVBUCxJQUFBQSxHQUFHLENBQUNRLElBQUosR0FBV0MsSUFBWCxDQUFnQixVQUFBQyxJQUFJLEVBQUk7QUFDcEJuQixNQUFBQSxHQUFHLENBQUNSLElBQUosQ0FBUyxjQUFUO0FBQ0gsS0FGRCxXQUdPLFVBQUFVLEdBQUcsRUFBSTtBQUNWRixNQUFBQSxHQUFHLENBQUNXLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixxQkFBckI7QUFDSCxLQUxEO0FBTVAsR0FkRDtBQWVILENBaEJEO0FBa0JBeEIsU0FBUyxDQUFDUyxLQUFWLENBQWdCLE1BQWhCLEVBQXdCYSxJQUF4QixDQUE2QixVQUFTWCxHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDNUMsTUFBSVMsR0FBRyxHQUFHLElBQUl4QixHQUFKLENBQVFjLEdBQUcsQ0FBQ2UsSUFBWixDQUFWO0FBQ0FWLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxHQUFaO0FBQ0FBLEVBQUFBLEdBQUcsQ0FBQ1EsSUFBSixHQUNLQyxJQURMLENBQ1UsVUFBQVQsR0FBRyxFQUFJO0FBQ1RULElBQUFBLEdBQUcsQ0FBQ1csTUFBSixDQUFXLEdBQVgsRUFBZ0JuQixJQUFoQixDQUFxQjtBQUFDLGFBQU87QUFBUixLQUFyQjtBQUNILEdBSEwsV0FJVyxVQUFBVSxHQUFHLEVBQUk7QUFDVkYsSUFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsdUJBQXJCO0FBQ0gsR0FOTDtBQU9ILENBVkQ7QUFZQXpCLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLE9BQVIsRUFBaUJILFNBQWpCO0FBRUFELEdBQUcsQ0FBQ2lDLE1BQUosQ0FBVzlCLElBQVgsRUFBaUIsWUFBVztBQUN4QmMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0NBQWdDZixJQUE1QztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvZG9uL0Rlc2t0b3AvaG9uZXlBUEkvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJylcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxuY29uc3QgQXBpID0gcmVxdWlyZSgnLi9hcGkubW9kZWwnKVxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKVxuY29uc3QgYXBwID0gZXhwcmVzcygpXG5cbmNvbnN0IGFwaVJvdXRlcyA9IGV4cHJlc3MuUm91dGVyKClcblxuY29uc3QgUE9SVCA9IDQwMDBcblxuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxuYXBwLnVzZShjb3JzKCkpXG5cbmNvbnN0IHVyaSA9IFwibW9uZ29kYitzcnY6Ly9hZG1pbjpsb2xsb25lQGhvbmV5Y2x1c3Rlci5mZnV2Zy5tb25nb2RiLm5ldC90ZXN0P3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiO1xuXG5tb25nb29zZS5jb25uZWN0KHVyaSwge1xuICB1c2VOZXdVcmxQYXJzZXI6IHRydWVcbn0pO1xuY29uc3QgY29ubmVjdGlvbiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XG5cbmFwaVJvdXRlcy5yb3V0ZSgnLycpLmdldChmdW5jdGlvbihyZXEscmVzKSB7IFxuICAgIEFwaS5maW5kKCAoZXJyLCBhcGlzKSA9PiB7XG4gICAgICAgIGlmKGVycikgeyBcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgfSBlbHNlIHsgXG4gICAgICAgICAgICByZXMuanNvbihhcGlzKVxuICAgICAgICB9XG4gICAgfSlcbn0pXG5cbmFwaVJvdXRlcy5yb3V0ZSgnLzppZCcpLmdldCggZnVuY3Rpb24ocmVxLCByZXMpIHsgXG4gICAgbGV0ICBpZCA9IHJlcS5wYXJhbXMuaWRcbiAgICBBcGkuZmluZEJ5SWQoaWQsIChlcnIsIGFwaSkgPT4geyBcbiAgICAgICAgcmVzLmpzb24oYXBpKVxuICAgIH0pXG59KVxuXG5hcGlSb3V0ZXMucm91dGUoJy91cGRhdGUvOmlkJykucG9zdChmdW5jdGlvbihyZXEsIHJlcykge1xuICAgIEFwaS5maW5kQnlJZChyZXEucGFyYW1zLmlkLCBmdW5jdGlvbihlcnIsIGFwaSkge1xuICAgICAgICBpZiAoIWFwaSlcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKFwiZGF0YSBpcyBub3QgZm91bmRcIik7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGFwaS5hcGlfZGVzY3JpcHRpb24gPSByZXEuYm9keS5hcGlfZGVzY3JpcHRpb247XG4gICAgICAgICAgICBhcGkuYXBpX3Byb3ByaWV0YXJ5ID0gcmVxLmJvZHkuYXBpX3Byb3ByaWV0YXJ5O1xuICAgICAgICAgICAgYXBpLmFwaV9lbmRwb2ludCA9IHJlcS5ib2R5LmFwaV9lbmRwb2ludDtcblxuICAgICAgICAgICAgYXBpLnNhdmUoKS50aGVuKHRvZG8gPT4ge1xuICAgICAgICAgICAgICAgIHJlcy5qc29uKCdhcGkgdXBkYXRlZCEnKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDQwMCkuc2VuZChcIlVwZGF0ZSBub3QgcG9zc2libGVcIik7XG4gICAgICAgICAgICB9KTtcbiAgICB9KTtcbn0pO1xuXG5hcGlSb3V0ZXMucm91dGUoJy9hZGQnKS5wb3N0KGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gICAgbGV0IGFwaSA9IG5ldyBBcGkocmVxLmJvZHkpO1xuICAgIGNvbnNvbGUubG9nKGFwaSlcbiAgICBhcGkuc2F2ZSgpXG4gICAgICAgIC50aGVuKGFwaSA9PiB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7J2FwaSc6ICdhcGkgYWRkZWQgc3VjY2Vzc2Z1bGx5J30pO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAwKS5zZW5kKCdhZGRpbmcgbmV3IGFwaSBmYWlsZWQnKTtcbiAgICAgICAgfSk7XG59KTtcblxuYXBwLnVzZSgnL2FwaXMnLCBhcGlSb3V0ZXMpXG5cbmFwcC5saXN0ZW4oUE9SVCwgZnVuY3Rpb24oKSB7IFxuICAgIGNvbnNvbGUubG9nKFwiU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydDogXCIgKyBQT1JUKVxufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "mongoose",
        "express",
        "Api",
        "cors",
        "app",
        "apiRoutes",
        "Router",
        "PORT",
        "use",
        "json",
        "uri",
        "connect",
        "useNewUrlParser",
        "connection",
        "route",
        "get",
        "req",
        "res",
        "find",
        "err",
        "apis",
        "console",
        "log",
        "id",
        "params",
        "findById",
        "api",
        "post",
        "status",
        "send",
        "api_description",
        "body",
        "api_proprietary",
        "api_endpoint",
        "save",
        "then",
        "todo",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/home/don/Desktop/honeyAPI/",
      "sourcesContent": [
        "const bodyParser = require('body-parser')\nconst mongoose = require('mongoose')\nconst express = require('express')\nconst Api = require('./api.model')\nconst cors = require('cors')\nconst app = express()\n\nconst apiRoutes = express.Router()\n\nconst PORT = 4000\n\n\napp.use(bodyParser.json())\napp.use(cors())\n\nconst uri = \"mongodb+srv://admin:lollone@honeycluster.ffuvg.mongodb.net/test?retryWrites=true&w=majority\";\n\nmongoose.connect(uri, {\n  useNewUrlParser: true\n});\nconst connection = mongoose.connection;\n\napiRoutes.route('/').get(function(req,res) { \n    Api.find( (err, apis) => {\n        if(err) { \n            console.log(err)\n        } else { \n            res.json(apis)\n        }\n    })\n})\n\napiRoutes.route('/:id').get( function(req, res) { \n    let  id = req.params.id\n    Api.findById(id, (err, api) => { \n        res.json(api)\n    })\n})\n\napiRoutes.route('/update/:id').post(function(req, res) {\n    Api.findById(req.params.id, function(err, api) {\n        if (!api)\n            res.status(404).send(\"data is not found\");\n        else\n            api.api_description = req.body.api_description;\n            api.api_proprietary = req.body.api_proprietary;\n            api.api_endpoint = req.body.api_endpoint;\n\n            api.save().then(todo => {\n                res.json('api updated!');\n            })\n            .catch(err => {\n                res.status(400).send(\"Update not possible\");\n            });\n    });\n});\n\napiRoutes.route('/add').post(function(req, res) {\n    let api = new Api(req.body);\n    console.log(api)\n    api.save()\n        .then(api => {\n            res.status(200).json({'api': 'api added successfully'});\n        })\n        .catch(err => {\n            res.status(400).send('adding new api failed');\n        });\n});\n\napp.use('/apis', apiRoutes)\n\napp.listen(PORT, function() { \n    console.log(\"Server is running on port: \" + PORT)\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594994211466
  },
  "{\"sourceRoot\":\"/home/don/Desktop/honeyAPI/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/don/Desktop/honeyAPI\",\"filename\":\"/home/don/Desktop/honeyAPI/api.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/don/Desktop/honeyAPI\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/don/Desktop/honeyAPI/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/don/Desktop/honeyAPI",
      "filename": "/home/don/Desktop/honeyAPI/api.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/don/Desktop/honeyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/don/Desktop/honeyAPI/api.model.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/don/Desktop/honeyAPI/api.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/don/Desktop/honeyAPI/",
        "sourceFileName": "api.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema;\nvar Api = Schema({\n  api_endpoint: {\n    type: String\n  },\n  api_proprietary: {\n    type: String\n  },\n  api_description: {\n    type: String\n  }\n});\nmodule.exports = mongoose.model('Api', Api);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5tb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJBcGkiLCJhcGlfZW5kcG9pbnQiLCJ0eXBlIiwiU3RyaW5nIiwiYXBpX3Byb3ByaWV0YXJ5IiwiYXBpX2Rlc2NyaXB0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXhCO0FBRUEsSUFBSUMsR0FBRyxHQUFHRCxNQUFNLENBQUM7QUFDYkUsRUFBQUEsWUFBWSxFQUFFO0FBQ1ZDLElBQUFBLElBQUksRUFBRUM7QUFESSxHQUREO0FBSWJDLEVBQUFBLGVBQWUsRUFBRTtBQUNiRixJQUFBQSxJQUFJLEVBQUVDO0FBRE8sR0FKSjtBQU9iRSxFQUFBQSxlQUFlLEVBQUU7QUFDYkgsSUFBQUEsSUFBSSxFQUFFQztBQURPO0FBUEosQ0FBRCxDQUFoQjtBQVlBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLFFBQVEsQ0FBQ1csS0FBVCxDQUFlLEtBQWYsRUFBc0JSLEdBQXRCLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Rvbi9EZXNrdG9wL2hvbmV5QVBJLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hXG5cbmxldCBBcGkgPSBTY2hlbWEoe1xuICAgIGFwaV9lbmRwb2ludDoge1xuICAgICAgICB0eXBlOiBTdHJpbmdcbiAgICB9LCBcbiAgICBhcGlfcHJvcHJpZXRhcnk6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nXG4gICAgfSxcbiAgICBhcGlfZGVzY3JpcHRpb246IHtcbiAgICAgICAgdHlwZTogU3RyaW5nXG4gICAgfVxufSlcblxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgnQXBpJywgQXBpKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "Api",
        "api_endpoint",
        "type",
        "String",
        "api_proprietary",
        "api_description",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,IAAIC,GAAG,GAAGD,MAAM,CAAC;AACbE,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAEC;AADI,GADD;AAIbC,EAAAA,eAAe,EAAE;AACbF,IAAAA,IAAI,EAAEC;AADO,GAJJ;AAObE,EAAAA,eAAe,EAAE;AACbH,IAAAA,IAAI,EAAEC;AADO;AAPJ,CAAD,CAAhB;AAYAG,MAAM,CAACC,OAAP,GAAiBV,QAAQ,CAACW,KAAT,CAAe,KAAf,EAAsBR,GAAtB,CAAjB",
      "sourceRoot": "/home/don/Desktop/honeyAPI/",
      "sourcesContent": [
        "const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet Api = Schema({\n    api_endpoint: {\n        type: String\n    }, \n    api_proprietary: {\n        type: String\n    },\n    api_description: {\n        type: String\n    }\n})\n\nmodule.exports = mongoose.model('Api', Api)"
      ]
    },
    "sourceType": "script",
    "mtime": 1594989027603
  },
  "{\"sourceRoot\":\"/home/don/Desktop/honeyAPI/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/don/Desktop/honeyAPI\",\"filename\":\"/home/don/Desktop/honeyAPI/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/don/Desktop/honeyAPI\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/don/Desktop/honeyAPI/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/don/Desktop/honeyAPI",
      "filename": "/home/don/Desktop/honeyAPI/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/don/Desktop/honeyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/don/Desktop/honeyAPI/app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/don/Desktop/honeyAPI/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/don/Desktop/honeyAPI/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar bodyParser = require('body-parser');\n\nvar mongoose = require('mongoose');\n\nvar express = require('express');\n\nvar Api = require('./api.model');\n\nvar path = require('path');\n\nvar cors = require('cors');\n\nvar app = express();\nvar apiRoutes = express.Router();\nvar PORT = process.env.HTTP_PORT || 4000;\napp.use(express[\"static\"](path.join(__dirname, 'client', 'build')));\napp.use(bodyParser.json());\napp.use(cors());\nvar uri = \"mongodb+srv://admin:lollone@honeycluster.ffuvg.mongodb.net/test?retryWrites=true&w=majority\";\nmongoose.connect(uri, {\n  useNewUrlParser: true\n});\nvar connection = mongoose.connection;\napiRoutes.route('/').get(function (req, res) {\n  Api.find(function (err, apis) {\n    if (err) {\n      console.log(err);\n    } else {\n      res.json(apis);\n    }\n  });\n});\napiRoutes.route('/:id').get(function (req, res) {\n  var id = req.params.id;\n  Api.findById(id, function (err, api) {\n    res.json(api);\n  });\n});\napiRoutes.route('/update/:id').post(function (req, res) {\n  Api.findById(req.params.id, function (err, api) {\n    if (!api) res.status(404).send(\"data is not found\");else api.api_description = req.body.api_description;\n    api.api_proprietary = req.body.api_proprietary;\n    api.api_endpoint = req.body.api_endpoint;\n    api.save().then(function (todo) {\n      res.json('api updated!');\n    })[\"catch\"](function (err) {\n      res.status(400).send(\"Update not possible\");\n    });\n  });\n});\napiRoutes.route('/add').post(function (req, res) {\n  var api = new Api(req.body);\n  console.log(api);\n  api.save().then(function (api) {\n    res.status(200).json({\n      'api': 'api added successfully'\n    });\n  })[\"catch\"](function (err) {\n    res.status(400).send('adding new api failed');\n  });\n});\napp.use('/apis', apiRoutes);\napp.listen(PORT, function () {\n  console.log(\"Server is running on port: \" + PORT);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJib2R5UGFyc2VyIiwicmVxdWlyZSIsIm1vbmdvb3NlIiwiZXhwcmVzcyIsIkFwaSIsInBhdGgiLCJjb3JzIiwiYXBwIiwiYXBpUm91dGVzIiwiUm91dGVyIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJIVFRQX1BPUlQiLCJ1c2UiLCJqb2luIiwiX19kaXJuYW1lIiwianNvbiIsInVyaSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJjb25uZWN0aW9uIiwicm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJmaW5kIiwiZXJyIiwiYXBpcyIsImNvbnNvbGUiLCJsb2ciLCJpZCIsInBhcmFtcyIsImZpbmRCeUlkIiwiYXBpIiwicG9zdCIsInN0YXR1cyIsInNlbmQiLCJhcGlfZGVzY3JpcHRpb24iLCJib2R5IiwiYXBpX3Byb3ByaWV0YXJ5IiwiYXBpX2VuZHBvaW50Iiwic2F2ZSIsInRoZW4iLCJ0b2RvIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXhCOztBQUVBLElBQUlDLFFBQVEsR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUUsT0FBTyxHQUFHRixPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFFQSxJQUFJRyxHQUFHLEdBQUdILE9BQU8sQ0FBQyxhQUFELENBQWpCOztBQUVBLElBQUlJLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBRUEsSUFBSUssSUFBSSxHQUFHTCxPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFFQSxJQUFJTSxHQUFHLEdBQUdKLE9BQU8sRUFBakI7QUFDQSxJQUFJSyxTQUFTLEdBQUdMLE9BQU8sQ0FBQ00sTUFBUixFQUFoQjtBQUNBLElBQUlDLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBQVosSUFBeUIsSUFBcEM7QUFDQU4sR0FBRyxDQUFDTyxHQUFKLENBQVFY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VCxHQUFWLEVBQWU7QUFDN0JULElBQUFBLEdBQUcsQ0FBQ1csTUFBSixDQUFXLEdBQVgsRUFBZ0JuQixJQUFoQixDQUFxQjtBQUNuQixhQUFPO0FBRFksS0FBckI7QUFHRCxHQUpELEVBSUcsT0FKSCxFQUlZLFVBQVVVLEdBQVYsRUFBZTtBQUN6QkYsSUFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsdUJBQXJCO0FBQ0QsR0FORDtBQU9ELENBVkQ7QUFXQTlCLEdBQUcsQ0FBQ08sR0FBSixDQUFRLE9BQVIsRUFBaUJOLFNBQWpCO0FBQ0FELEdBQUcsQ0FBQ3NDLE1BQUosQ0FBV25DLElBQVgsRUFBaUIsWUFBWTtBQUMzQm1CLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdDQUFnQ3BCLElBQTVDO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9kb24vRGVza3RvcC9ob25leUFQSS8iLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuXG52YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG52YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcblxudmFyIEFwaSA9IHJlcXVpcmUoJy4vYXBpLm1vZGVsJyk7XG5cbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG52YXIgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcblxudmFyIGFwcCA9IGV4cHJlc3MoKTtcbnZhciBhcGlSb3V0ZXMgPSBleHByZXNzLlJvdXRlcigpO1xudmFyIFBPUlQgPSBwcm9jZXNzLmVudi5IVFRQX1BPUlQgfHwgNDAwMDtcbmFwcC51c2UoZXhwcmVzc1tcInN0YXRpY1wiXShwYXRoLmpvaW4oX19kaXJuYW1lLCAnY2xpZW50JywgJ2J1aWxkJykpKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShjb3JzKCkpO1xudmFyIHVyaSA9IFwibW9uZ29kYitzcnY6Ly9hZG1pbjpsb2xsb25lQGhvbmV5Y2x1c3Rlci5mZnV2Zy5tb25nb2RiLm5ldC90ZXN0P3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiO1xubW9uZ29vc2UuY29ubmVjdCh1cmksIHtcbiAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlXG59KTtcbnZhciBjb25uZWN0aW9uID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcbmFwaVJvdXRlcy5yb3V0ZSgnLycpLmdldChmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgQXBpLmZpbmQoZnVuY3Rpb24gKGVyciwgYXBpcykge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcy5qc29uKGFwaXMpO1xuICAgIH1cbiAgfSk7XG59KTtcbmFwaVJvdXRlcy5yb3V0ZSgnLzppZCcpLmdldChmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgdmFyIGlkID0gcmVxLnBhcmFtcy5pZDtcbiAgQXBpLmZpbmRCeUlkKGlkLCBmdW5jdGlvbiAoZXJyLCBhcGkpIHtcbiAgICByZXMuanNvbihhcGkpO1xuICB9KTtcbn0pO1xuYXBpUm91dGVzLnJvdXRlKCcvdXBkYXRlLzppZCcpLnBvc3QoZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gIEFwaS5maW5kQnlJZChyZXEucGFyYW1zLmlkLCBmdW5jdGlvbiAoZXJyLCBhcGkpIHtcbiAgICBpZiAoIWFwaSkgcmVzLnN0YXR1cyg0MDQpLnNlbmQoXCJkYXRhIGlzIG5vdCBmb3VuZFwiKTtlbHNlIGFwaS5hcGlfZGVzY3JpcHRpb24gPSByZXEuYm9keS5hcGlfZGVzY3JpcHRpb247XG4gICAgYXBpLmFwaV9wcm9wcmlldGFyeSA9IHJlcS5ib2R5LmFwaV9wcm9wcmlldGFyeTtcbiAgICBhcGkuYXBpX2VuZHBvaW50ID0gcmVxLmJvZHkuYXBpX2VuZHBvaW50O1xuICAgIGFwaS5zYXZlKCkudGhlbihmdW5jdGlvbiAodG9kbykge1xuICAgICAgcmVzLmpzb24oJ2FwaSB1cGRhdGVkIScpO1xuICAgIH0pW1wiY2F0Y2hcIl0oZnVuY3Rpb24gKGVycikge1xuICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoXCJVcGRhdGUgbm90IHBvc3NpYmxlXCIpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuYXBpUm91dGVzLnJvdXRlKCcvYWRkJykucG9zdChmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgdmFyIGFwaSA9IG5ldyBBcGkocmVxLmJvZHkpO1xuICBjb25zb2xlLmxvZyhhcGkpO1xuICBhcGkuc2F2ZSgpLnRoZW4oZnVuY3Rpb24gKGFwaSkge1xuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICdhcGknOiAnYXBpIGFkZGVkIHN1Y2Nlc3NmdWxseSdcbiAgICB9KTtcbiAgfSlbXCJjYXRjaFwiXShmdW5jdGlvbiAoZXJyKSB7XG4gICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoJ2FkZGluZyBuZXcgYXBpIGZhaWxlZCcpO1xuICB9KTtcbn0pO1xuYXBwLnVzZSgnL2FwaXMnLCBhcGlSb3V0ZXMpO1xuYXBwLmxpc3RlbihQT1JULCBmdW5jdGlvbiAoKSB7XG4gIGNvbnNvbGUubG9nKFwiU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydDogXCIgKyBQT1JUKTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "mongoose",
        "express",
        "Api",
        "path",
        "cors",
        "app",
        "apiRoutes",
        "Router",
        "PORT",
        "process",
        "env",
        "HTTP_PORT",
        "use",
        "join",
        "__dirname",
        "json",
        "uri",
        "connect",
        "useNewUrlParser",
        "connection",
        "route",
        "get",
        "req",
        "res",
        "find",
        "err",
        "apis",
        "console",
        "log",
        "id",
        "params",
        "findById",
        "api",
        "post",
        "status",
        "send",
        "api_description",
        "body",
        "api_proprietary",
        "api_endpoint",
        "save",
        "then",
        "todo",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/home/don/Desktop/honeyAPI/",
      "sourcesContent": [
        "\"use strict\";\n\nvar bodyParser = require('body-parser');\n\nvar mongoose = require('mongoose');\n\nvar express = require('express');\n\nvar Api = require('./api.model');\n\nvar path = require('path');\n\nvar cors = require('cors');\n\nvar app = express();\nvar apiRoutes = express.Router();\nvar PORT = process.env.HTTP_PORT || 4000;\napp.use(express[\"static\"](path.join(__dirname, 'client', 'build')));\napp.use(bodyParser.json());\napp.use(cors());\nvar uri = \"mongodb+srv://admin:lollone@honeycluster.ffuvg.mongodb.net/test?retryWrites=true&w=majority\";\nmongoose.connect(uri, {\n  useNewUrlParser: true\n});\nvar connection = mongoose.connection;\napiRoutes.route('/').get(function (req, res) {\n  Api.find(function (err, apis) {\n    if (err) {\n      console.log(err);\n    } else {\n      res.json(apis);\n    }\n  });\n});\napiRoutes.route('/:id').get(function (req, res) {\n  var id = req.params.id;\n  Api.findById(id, function (err, api) {\n    res.json(api);\n  });\n});\napiRoutes.route('/update/:id').post(function (req, res) {\n  Api.findById(req.params.id, function (err, api) {\n    if (!api) res.status(404).send(\"data is not found\");else api.api_description = req.body.api_description;\n    api.api_proprietary = req.body.api_proprietary;\n    api.api_endpoint = req.body.api_endpoint;\n    api.save().then(function (todo) {\n      res.json('api updated!');\n    })[\"catch\"](function (err) {\n      res.status(400).send(\"Update not possible\");\n    });\n  });\n});\napiRoutes.route('/add').post(function (req, res) {\n  var api = new Api(req.body);\n  console.log(api);\n  api.save().then(function (api) {\n    res.status(200).json({\n      'api': 'api added successfully'\n    });\n  })[\"catch\"](function (err) {\n    res.status(400).send('adding new api failed');\n  });\n});\napp.use('/apis', apiRoutes);\napp.listen(PORT, function () {\n  console.log(\"Server is running on port: \" + PORT);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595000502231
  }
}